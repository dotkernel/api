<?php
/**
 * Local configuration.
 *
 * Copy this file to `local.php` and change its settings as required.
 * `local.php` is ignored by git and safe to use for local and sensitive data like usernames and passwords.
 */

declare(strict_types=1);

$baseUrl = 'http://localhost:8080';

$databases = [
    'default' => [
        'host' => 'localhost',
        'dbname' => '',
        'user' => '',
        'password' => '',
        'port' => 3306,
        'driver' => 'pdo_mysql',
        'charset' => 'utf8mb4',
        'collate' => 'utf8mb4_general_ci'
    ]
    // you can add more database connections into this array
];

return [
    'annotations_cache_dir' => getcwd() . '/data/cache/annotations',
    'application' => [
        'name' => 'DotKernel API',
        'url' => $baseUrl
    ],
    'authentication' => [
        'private_key'    => [
            'key_or_path' => getcwd() . '/data/oauth/private.key',
            'key_permissions_check' => false
        ],
        'public_key'    => [
            'key_or_path' => getcwd() . '/data/oauth/public.key',
            'key_permissions_check' => false
        ],
        'encryption_key' => require getcwd() . '/data/oauth/encryption.key',
        'access_token_expire'  => 'P1D',
        'refresh_token_expire' => 'P1M',
        'auth_code_expire'     => 'PT10M',
        'pdo' => [
            'dsn' => sprintf('mysql:host=%s;port=%d;dbname=%s',
                $databases['default']['host'],
                $databases['default']['port'],
                $databases['default']['dbname']
            ),
            'username' => $databases['default']['user'],
            'password' => $databases['default']['password']
        ],
        'invalid_credentials' => [
            'error' => 'Invalid credentials.',
            'error_description' => 'Invalid credentials.',
            'message' => 'Invalid credentials.',
        ]
    ],
    'databases' => $databases,
    'doctrine' => [
        'connection' => [
            'orm_default' => [
                'params' => $databases['default']
            ]
        ],
        'configuration' => [
             'orm_default' => [
                 // it is recommended to disable doctrine cache on development
                 // just comment any type of cache you dont want to be applied on development
                 'query_cache' => \Doctrine\Common\Cache\PhpFileCache::class,
                 'metadata_cache' => \Doctrine\Common\Cache\PhpFileCache::class,
                 'result_cache' => \Doctrine\Common\Cache\PhpFileCache::class
                 ]
             ],
    ],
    'documentation' => [
        /**
         * showMarker: displays a marker informing whether the documentation displayed is based the cached/live config
         * - true: (for development environment) marker is shown
         * - false: (for production environment) marker is hidden
         */
        'showMarker'  => true,
        /**
         * loadFromCache: toggle that enables switching between the cached/live version of config
         * - true: loaded from cacheTarget
         * - false: generated on the fly
         */
        'loadFromCache' => false,
        /**
         * cacheFile: specifies the path to the cache file
         */
        'cacheFile' => getcwd() . '/data/cache/documentation.php',
        'servers' => [
            [
                'url' => $baseUrl,
                'description' => 'development'
            ]
        ]
    ],
    'uploads' => [
        'user' => [
            'url'  => $baseUrl . '/uploads/user',
            'path' => \realpath(__DIR__ . '/../../public/uploads/user'),
        ]
    ],
];
